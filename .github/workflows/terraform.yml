name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest
    environment: Development

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_VAR_bucket_name: ${{ secrets.TF_VAR_BUCKET_NAME }}
      TF_VAR_my_ip: ${{ secrets.TF_VAR_MY_IP }}

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Step 3: Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 4: Terraform Init
      - name: Terraform Init
        run: terraform init

      # Step 5: Terraform Format Check
      - name: Terraform Format Check
        run: terraform fmt -check

      # Step 6: Terraform Validate
      - name: Terraform Validate
        run: terraform validate

      # Step 7: Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Step 8: Terraform Apply (only on main branch)
      - name: Terraform Apply
        # This is more precise: only run on PUSH events to main
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan

      # Step 9: Terraform Destroy (optional cleanup)
      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform destroy -auto-approve
